{"version":3,"sources":["components/Feedback/Section/Section.js","components/Feedback/FeedbackOptions/FeedbackOptions.js","components/Feedback/Notification/Notification.js","components/Feedback/Statistics/Statistics.js","components/App.js","index.js"],"names":["Section","this","props","title","children","Component","FeedbackOptions","good","neutral","bad","onClick","Notification","message","Statistics","Good","Neutral","Bad","total","positivePercentage","App","state","handleGood","setState","prevState","handleNeutral","handleBad","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAGqBA,E,4JACnB,WACE,OACE,oCACE,6BAAKC,KAAKC,MAAMC,MAAQF,KAAKC,MAAMC,MAAQ,0BAC1CF,KAAKC,MAAME,gB,GALiBC,aCAhBC,E,4JACnB,WACE,MAA+BL,KAAKC,MAA5BK,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,qCACE,wBAAQC,QAASH,EAAjB,kBACA,wBAAQG,QAASF,EAAjB,qBACA,wBAAQE,QAASD,EAAjB,wB,GAPqCJ,aCAxBM,E,4JACnB,WACE,OAAOV,KAAKC,MAAMU,QAAUX,KAAKC,MAAMU,QAAU,sB,GAFXP,aCCrBQ,E,4JACnB,WACE,MAAsCZ,KAAKC,MAAnCY,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAE5B,OACE,qCACE,4CACCA,EACC,+BACE,wCAAWH,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYf,KAAKC,MAAMe,SACvB,oDACqB,IAClBhB,KAAKC,MAAMgB,mBACRjB,KAAKC,MAAMgB,mBACX,EAJN,UASF,cAAC,EAAD,CAAcN,QAAQ,6B,GAtBQP,aCCnBc,E,4MACnBC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,WAAa,WACX,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAAET,KAAMS,EAAUT,KAAO,O,EAGvDU,cAAgB,WACd,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAAER,QAASQ,EAAUR,QAAU,O,EAG7DU,UAAY,WACV,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAAEP,IAAKO,EAAUP,IAAM,O,4CAGrD,WACE,MAA+Bf,KAAKmB,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQH,EAAOC,EAAUC,EAE/B,OACE,eAAC,EAAD,CAASb,MAAO,wBAAhB,UACE,cAAC,EAAD,CACEI,KAAMN,KAAKoB,WACXb,QAASP,KAAKuB,cACdf,IAAKR,KAAKwB,YAEZ,cAAC,EAAD,CACEX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBQ,KAAKC,MAAOb,EAAOG,EAAS,c,GAnCzBZ,aCAjCuB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.a71c7412.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Section extends Component {\r\n  render() {\r\n    return (\r\n      <section>\r\n        <h2>{this.props.title ? this.props.title : 'Please leave feedback'}</h2>\r\n        {this.props.children}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class FeedbackOptions extends Component {\r\n  render() {\r\n    const { good, neutral, bad } = this.props;\r\n    return (\r\n      <>\r\n        <button onClick={good}>Good</button>\r\n        <button onClick={neutral}>Neutral</button>\r\n        <button onClick={bad}>Bad</button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  good: PropTypes.func,\r\n  neutral: PropTypes.func,\r\n  bad: PropTypes.func,\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Notification extends Component {\r\n  render() {\r\n    return this.props.message ? this.props.message : 'No information ';\r\n  }\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification';\r\n\r\nexport default class Statistics extends Component {\r\n  render() {\r\n    const { Good, Neutral, Bad, total } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <h3>Statistics</h3>\r\n        {total ? (\r\n          <ul>\r\n            <li>Good: {Good}</li>\r\n            <li>Neutral: {Neutral}</li>\r\n            <li>Bad: {Bad}</li>\r\n            <li>Total: {this.props.total}</li>\r\n            <li>\r\n              Positive feedback:{' '}\r\n              {this.props.positivePercentage\r\n                ? this.props.positivePercentage\r\n                : 0}\r\n              %\r\n            </li>\r\n          </ul>\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nStatistics.propTypes = {\r\n  Good: PropTypes.number,\r\n  Neutral: PropTypes.number,\r\n  Bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import { Component } from 'react';\r\nimport Section from './Feedback/Section/Section';\r\nimport FeedbackOptions from './Feedback/FeedbackOptions/FeedbackOptions';\r\nimport Statistics from './Feedback/Statistics/Statistics';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    Good: 0,\r\n    Neutral: 0,\r\n    Bad: 0,\r\n  };\r\n\r\n  handleGood = () => {\r\n    this.setState(prevState => ({ Good: prevState.Good + 1 }));\r\n  };\r\n\r\n  handleNeutral = () => {\r\n    this.setState(prevState => ({ Neutral: prevState.Neutral + 1 }));\r\n  };\r\n\r\n  handleBad = () => {\r\n    this.setState(prevState => ({ Bad: prevState.Bad + 1 }));\r\n  };\r\n\r\n  render() {\r\n    const { Good, Neutral, Bad } = this.state;\r\n    const total = Good + Neutral + Bad;\r\n\r\n    return (\r\n      <Section title={'Please leave feedback'}>\r\n        <FeedbackOptions\r\n          good={this.handleGood}\r\n          neutral={this.handleNeutral}\r\n          bad={this.handleBad}\r\n        />\r\n        <Statistics\r\n          Good={Good}\r\n          Neutral={Neutral}\r\n          Bad={Bad}\r\n          total={total}\r\n          positivePercentage={Math.round((Good / total) * 100)}\r\n        />\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}